#
# Copyright (C) 2004-2005 Karl Tauber. All rights reserved.
#
# $Id$
#
# JFormDesigner uses persistence delegates (java.beans.PersistenceDelegate)
# to encode property values to XML (using XMLEncoder).
# If your beans uses classes (for property values), which are not JavaBean
# compatible, you can write your own persistence delegate and register it here.
#
# Syntax:
#   <propertyClassName>=class:<persistenceDelegateClassName> or
#   <propertyClassName>=constructorArguments:<propName1>[,<propName2>,...]
#   <propertyClassName>=toString
#
# Description:
#   class
#     Use the class <persistenceDelegateClassName>, which must be derived from
#     java.beans.PersistenceDelegate (or any subclass), as persistence delegate
#     for <propertyClassName>.
#
#   constructorArguments
#     Assumes that class <propertyClassName> has a constructor whose arguments
#     are the values of the property names <propName1>[,<propName2>,...].
#     The constructor arguments are created by evaluating the property names
#     in the order they are supplied.
#
#   toString
#     Assumes that class <propertyClassName> has a constructor taking a String
#     argument and a toString() method that returns a String, which representation
#     is compatible with the (String) constructor.
#
# Examples:
#   com.myproject.MyPropertyClass=class:com.myproject.MyPropertyClass_PersistenceDelegate
#   com.myproject.MyPropertyClass=constructorArguments:prop1,prop2,prop3
#   com.myproject.MyPropertyClass=toString
#
# JFormDesigner reloads this file automatically when changed. No restart necessary.
# This file will be not overwritten when installing JFormDesigner.
#
